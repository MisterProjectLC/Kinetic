name: Build

on:
  push:
    tags:
      - 'alpha[0-9]+'
      - 'beta[0-9]+'
      - 'release[0-9]+'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build_windows:
    name: Build my project on Windows
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
    
      # Cache Library
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        with:
          unityVersion: 2020.3.13f1

      # Build Windows
      - name: Build windows project
        uses: game-ci/unity-builder@v2
        with:
          unityVersion: 2020.3.13f1
          targetPlatform: StandaloneWindows64 
          allowDirtyBuild: true
          versioning: Semantic

      # Output
      - name: Generate windows project
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

      - name: Zip build
        run: |
          pushd 'build/Kinetic'
          zip -r '../../Kinetic - Windows Build.zip' .
          popd

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: Kinetic - Windows Build.zip
          name: Kinetic Release
    
  build_linux:
    name: Build my project on Linux
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
    
      # Cache Library
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        with:
          unityVersion: 2020.3.13f1
      
      # Build Linux
      - name: Build linux project
        uses: game-ci/unity-builder@v2
        with:
          unityVersion: 2020.3.13f1
          targetPlatform: StandaloneLinux64
          allowDirtyBuild: true
          versioning: Semantic

      # Output
      - name: Generate linux project
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

      - name: Zip build
        run: |
          pushd 'build/StandaloneLinux64'
          zip -r '../../Kinetic - Linux Build.zip' .
          popd

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: Kinetic - Linux Build.zip
          name: Kinetic Release